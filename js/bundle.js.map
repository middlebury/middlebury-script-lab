{"version":3,"sources":["node_modules/browser-pack/_prelude.js","_js/main.js","node_modules/component-clone/index.js","node_modules/component-clone/node_modules/component-type/index.js","node_modules/component-raf/index.js","node_modules/component-tween/index.js","node_modules/component-tween/node_modules/component-emitter/index.js","node_modules/component-type/index.js","node_modules/ease-component/index.js","node_modules/headroom.js/dist/headroom.js","node_modules/onscrolling/dist/onscrolling.js","node_modules/scroll-to/index.js"],"names":[],"mappings":"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AAY,EAAE,oBAAF,CAAlB;AACA,MAAM,eAAe,iBAArB;;AAEA,MAAM,QAAQ,IAAI,kBAAJ,CAAa,GAAb,EAAkB;AAC9B,YAAQ,IAAI,SAAJ,GAAgB,YADM;AAE9B,YAF8B,sBAEnB;AACT,eAAS,SAAT,EAAoB,YAApB;AACA;AACA;AACD,KAN6B;AAO9B,SAP8B,mBAOtB;AACN,kBAAY,SAAZ,EAAuB,YAAvB;AACA;AACD;AAV6B,GAAlB,CAAd;;AAaA,QAAM,IAAN;AACD;;AAED,SAAS,IAAT,GAAgB;AACd;;AAEA,MAAI,WAAW,GAAX,CAAJ,EAAqB;AACnB;AACA;AACA;AACA,+BAAY,YAAZ;AACD;AACF;;AAED;;;AC9IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjjKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClldfile":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import scrollTo from 'scroll-to';\nimport Headroom from 'headroom.js';\nimport onscrolling from 'onscrolling';\n\nconst $ = selector => document.querySelector(selector);\nconst $$ = selector => document.querySelectorAll(selector);\nconst addClass = (elem, className) => elem.classList.add(className);\nconst removeClass = (elem, className) => elem.classList.remove(className);\nconst forEach = (items, cb) => [].forEach.call(items, cb);\n\nconst getHeader = () => $('.js-nav');\n\nconst header = getHeader();\nconst siteBrand = $('.js-site-brand');\nconst headerAppBtn = $('.js-header-app-btn');\n\nconst sectionLinks = $$('.js-link');\n\nconst sections = {};\nconst isBtnStuck = false;\n\n// sets the padding top of the body element\nconst setBodyTopPad = x => (document.body.style.paddingTop = x + 'px');\n\nconst getHeaderHeight = () => getHeader().offsetHeight;\n\nconst getScrollTop = () =>\n  document.documentElement.scrollTop || document.body.scrollTop;\n\nconst isMediaMin = width =>\n  window.matchMedia(`(min-width: ${width}px)`).matches;\n\nfunction padBody() {\n  const x = getHeaderHeight();\n  setBodyTopPad(x);\n}\n\nfunction initStickyHeader() {\n  const siteBrandHeight = siteBrand.offsetHeight;\n\n  // set up sticky header\n  const headroom = new Headroom(header, {\n    offset: siteBrandHeight,\n    onNotTop() {\n      padBody();\n    },\n    onTop() {\n      setBodyTopPad(0);\n    }\n  });\n\n  headroom.init();\n}\n\nfunction setSectionOffsets() {\n  const sectionElems = $$('.section');\n  const headroom = $('.js-headroom');\n  const headerHeight = getHeaderHeight();\n\n  forEach(sectionElems, elem => {\n    sections[elem.id] = elem.offsetTop - headerHeight;\n  });\n}\n\nfunction updateSections() {\n  const scrollPosition = getScrollTop();\n\n  for (let i in sections) {\n    if (sections[i] <= scrollPosition) {\n      const activeLink = $('.active');\n      const targetLink = $(`a[href*=${i}]`);\n\n      if (activeLink) {\n        removeClass(activeLink, 'active');\n      }\n\n      if (targetLink && !targetLink.classList.contains('active')) {\n        addClass(targetLink, 'active');\n      }\n    }\n  }\n}\n\n// scroll to the top of the target section minus the sticky header height\nfunction handleSectionLinkClick(e) {\n  e.preventDefault();\n\n  const href = e.target.getAttribute('href');\n  const target = $(href);\n\n  const y = target.offsetTop - getHeaderHeight();\n\n  const options = {\n    ease: 'linear',\n    duration: 300\n  };\n\n  scrollTo(0, y, options);\n}\n\nfunction addSectionLinkListeners() {\n  forEach(sectionLinks, link => {\n    link.addEventListener('click', handleSectionLinkClick);\n  });\n}\n\nfunction handleScroll() {\n  updateSections();\n}\n\nfunction initAppBtn() {\n  const btn = $('.js-app-btn');\n  const headerBtn = $('.js-header-app-btn');\n  const headerHeight = getHeaderHeight();\n\n  const hrBtn = new Headroom(btn, {\n    offset: btn.offsetTop - headerHeight,\n    onNotTop() {\n      addClass(headerBtn, 'is-visible');\n      setSectionOffsets();\n      // padBody();\n    },\n    onTop() {\n      removeClass(headerBtn, 'is-visible');\n      // padBody();\n    }\n  });\n\n  hrBtn.init();\n}\n\nfunction main() {\n  initStickyHeader();\n\n  if (isMediaMin(600)) {\n    setSectionOffsets();\n    initAppBtn();\n    addSectionLinkListeners();\n    onscrolling(handleScroll);\n  }\n}\n\nmain();\n","/**\n * Module dependencies.\n */\n\nvar type;\ntry {\n  type = require('component-type');\n} catch (_) {\n  type = require('type');\n}\n\n/**\n * Module exports.\n */\n\nmodule.exports = clone;\n\n/**\n * Clones objects.\n *\n * @param {Mixed} any object\n * @api public\n */\n\nfunction clone(obj){\n  switch (type(obj)) {\n    case 'object':\n      var copy = {};\n      for (var key in obj) {\n        if (obj.hasOwnProperty(key)) {\n          copy[key] = clone(obj[key]);\n        }\n      }\n      return copy;\n\n    case 'array':\n      var copy = new Array(obj.length);\n      for (var i = 0, l = obj.length; i < l; i++) {\n        copy[i] = clone(obj[i]);\n      }\n      return copy;\n\n    case 'regexp':\n      // from millermedeiros/amd-utils - MIT\n      var flags = '';\n      flags += obj.multiline ? 'm' : '';\n      flags += obj.global ? 'g' : '';\n      flags += obj.ignoreCase ? 'i' : '';\n      return new RegExp(obj.source, flags);\n\n    case 'date':\n      return new Date(obj.getTime());\n\n    default: // string, number, boolean, …\n      return obj;\n  }\n}\n","/**\n * toString ref.\n */\n\nvar toString = Object.prototype.toString;\n\n/**\n * Return the type of `val`.\n *\n * @param {Mixed} val\n * @return {String}\n * @api public\n */\n\nmodule.exports = function(val){\n  switch (toString.call(val)) {\n    case '[object Date]': return 'date';\n    case '[object RegExp]': return 'regexp';\n    case '[object Arguments]': return 'arguments';\n    case '[object Array]': return 'array';\n    case '[object Error]': return 'error';\n  }\n\n  if (val === null) return 'null';\n  if (val === undefined) return 'undefined';\n  if (val !== val) return 'nan';\n  if (val && val.nodeType === 1) return 'element';\n\n  if (isBuffer(val)) return 'buffer';\n\n  val = val.valueOf\n    ? val.valueOf()\n    : Object.prototype.valueOf.apply(val);\n\n  return typeof val;\n};\n\n// code borrowed from https://github.com/feross/is-buffer/blob/master/index.js\nfunction isBuffer(obj) {\n  return !!(obj != null &&\n    (obj._isBuffer || // For Safari 5-7 (missing Object.prototype.constructor)\n      (obj.constructor &&\n      typeof obj.constructor.isBuffer === 'function' &&\n      obj.constructor.isBuffer(obj))\n    ))\n}\n","/**\n * Expose `requestAnimationFrame()`.\n */\n\nexports = module.exports = window.requestAnimationFrame\n  || window.webkitRequestAnimationFrame\n  || window.mozRequestAnimationFrame\n  || fallback;\n\n/**\n * Fallback implementation.\n */\n\nvar prev = new Date().getTime();\nfunction fallback(fn) {\n  var curr = new Date().getTime();\n  var ms = Math.max(0, 16 - (curr - prev));\n  var req = setTimeout(fn, ms);\n  prev = curr;\n  return req;\n}\n\n/**\n * Cancel.\n */\n\nvar cancel = window.cancelAnimationFrame\n  || window.webkitCancelAnimationFrame\n  || window.mozCancelAnimationFrame\n  || window.clearTimeout;\n\nexports.cancel = function(id){\n  cancel.call(window, id);\n};\n","\n/**\n * Module dependencies.\n */\n\nvar Emitter = require('emitter');\nvar clone = require('clone');\nvar type = require('type');\nvar ease = require('ease');\n\n/**\n * Expose `Tween`.\n */\n\nmodule.exports = Tween;\n\n/**\n * Initialize a new `Tween` with `obj`.\n *\n * @param {Object|Array} obj\n * @api public\n */\n\nfunction Tween(obj) {\n  if (!(this instanceof Tween)) return new Tween(obj);\n  this._from = obj;\n  this.ease('linear');\n  this.duration(500);\n}\n\n/**\n * Mixin emitter.\n */\n\nEmitter(Tween.prototype);\n\n/**\n * Reset the tween.\n *\n * @api public\n */\n\nTween.prototype.reset = function(){\n  this.isArray = 'array' === type(this._from);\n  this._curr = clone(this._from);\n  this._done = false;\n  this._start = Date.now();\n  return this;\n};\n\n/**\n * Tween to `obj` and reset internal state.\n *\n *    tween.to({ x: 50, y: 100 })\n *\n * @param {Object|Array} obj\n * @return {Tween} self\n * @api public\n */\n\nTween.prototype.to = function(obj){\n  this.reset();\n  this._to = obj;\n  return this;\n};\n\n/**\n * Set duration to `ms` [500].\n *\n * @param {Number} ms\n * @return {Tween} self\n * @api public\n */\n\nTween.prototype.duration = function(ms){\n  this._duration = ms;\n  return this;\n};\n\n/**\n * Set easing function to `fn`.\n *\n *    tween.ease('in-out-sine')\n *\n * @param {String|Function} fn\n * @return {Tween}\n * @api public\n */\n\nTween.prototype.ease = function(fn){\n  fn = 'function' == typeof fn ? fn : ease[fn];\n  if (!fn) throw new TypeError('invalid easing function');\n  this._ease = fn;\n  return this;\n};\n\n/**\n * Stop the tween and immediately emit \"stop\" and \"end\".\n *\n * @return {Tween}\n * @api public\n */\n\nTween.prototype.stop = function(){\n  this.stopped = true;\n  this._done = true;\n  this.emit('stop');\n  this.emit('end');\n  return this;\n};\n\n/**\n * Perform a step.\n *\n * @return {Tween} self\n * @api private\n */\n\nTween.prototype.step = function(){\n  if (this._done) return;\n\n  // duration\n  var duration = this._duration;\n  var now = Date.now();\n  var delta = now - this._start;\n  var done = delta >= duration;\n\n  // complete\n  if (done) {\n    this._from = this._to;\n    this._update(this._to);\n    this._done = true;\n    this.emit('end');\n    return this;\n  }\n\n  // tween\n  var from = this._from;\n  var to = this._to;\n  var curr = this._curr;\n  var fn = this._ease;\n  var p = (now - this._start) / duration;\n  var n = fn(p);\n\n  // array\n  if (this.isArray) {\n    for (var i = 0; i < from.length; ++i) {\n      curr[i] = from[i] + (to[i] - from[i]) * n;\n    }\n\n    this._update(curr);\n    return this;\n  }\n\n  // objech\n  for (var k in from) {\n    curr[k] = from[k] + (to[k] - from[k]) * n;\n  }\n\n  this._update(curr);\n  return this;\n};\n\n/**\n * Set update function to `fn` or\n * when no argument is given this performs\n * a \"step\".\n *\n * @param {Function} fn\n * @return {Tween} self\n * @api public\n */\n\nTween.prototype.update = function(fn){\n  if (0 == arguments.length) return this.step();\n  this._update = fn;\n  return this;\n};","\n/**\n * Expose `Emitter`.\n */\n\nmodule.exports = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1)\n    , callbacks = this._callbacks['$' + event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","/**\n * toString ref.\n */\n\nvar toString = Object.prototype.toString;\n\n/**\n * Return the type of `val`.\n *\n * @param {Mixed} val\n * @return {String}\n * @api public\n */\n\nmodule.exports = function(val){\n  switch (toString.call(val)) {\n    case '[object Date]': return 'date';\n    case '[object RegExp]': return 'regexp';\n    case '[object Arguments]': return 'arguments';\n    case '[object Array]': return 'array';\n    case '[object Error]': return 'error';\n  }\n\n  if (val === null) return 'null';\n  if (val === undefined) return 'undefined';\n  if (val !== val) return 'nan';\n  if (val && val.nodeType === 1) return 'element';\n\n  val = val.valueOf\n    ? val.valueOf()\n    : Object.prototype.valueOf.apply(val)\n\n  return typeof val;\n};\n","\n// easing functions from \"Tween.js\"\n\nexports.linear = function(n){\n  return n;\n};\n\nexports.inQuad = function(n){\n  return n * n;\n};\n\nexports.outQuad = function(n){\n  return n * (2 - n);\n};\n\nexports.inOutQuad = function(n){\n  n *= 2;\n  if (n < 1) return 0.5 * n * n;\n  return - 0.5 * (--n * (n - 2) - 1);\n};\n\nexports.inCube = function(n){\n  return n * n * n;\n};\n\nexports.outCube = function(n){\n  return --n * n * n + 1;\n};\n\nexports.inOutCube = function(n){\n  n *= 2;\n  if (n < 1) return 0.5 * n * n * n;\n  return 0.5 * ((n -= 2 ) * n * n + 2);\n};\n\nexports.inQuart = function(n){\n  return n * n * n * n;\n};\n\nexports.outQuart = function(n){\n  return 1 - (--n * n * n * n);\n};\n\nexports.inOutQuart = function(n){\n  n *= 2;\n  if (n < 1) return 0.5 * n * n * n * n;\n  return -0.5 * ((n -= 2) * n * n * n - 2);\n};\n\nexports.inQuint = function(n){\n  return n * n * n * n * n;\n}\n\nexports.outQuint = function(n){\n  return --n * n * n * n * n + 1;\n}\n\nexports.inOutQuint = function(n){\n  n *= 2;\n  if (n < 1) return 0.5 * n * n * n * n * n;\n  return 0.5 * ((n -= 2) * n * n * n * n + 2);\n};\n\nexports.inSine = function(n){\n  return 1 - Math.cos(n * Math.PI / 2 );\n};\n\nexports.outSine = function(n){\n  return Math.sin(n * Math.PI / 2);\n};\n\nexports.inOutSine = function(n){\n  return .5 * (1 - Math.cos(Math.PI * n));\n};\n\nexports.inExpo = function(n){\n  return 0 == n ? 0 : Math.pow(1024, n - 1);\n};\n\nexports.outExpo = function(n){\n  return 1 == n ? n : 1 - Math.pow(2, -10 * n);\n};\n\nexports.inOutExpo = function(n){\n  if (0 == n) return 0;\n  if (1 == n) return 1;\n  if ((n *= 2) < 1) return .5 * Math.pow(1024, n - 1);\n  return .5 * (-Math.pow(2, -10 * (n - 1)) + 2);\n};\n\nexports.inCirc = function(n){\n  return 1 - Math.sqrt(1 - n * n);\n};\n\nexports.outCirc = function(n){\n  return Math.sqrt(1 - (--n * n));\n};\n\nexports.inOutCirc = function(n){\n  n *= 2\n  if (n < 1) return -0.5 * (Math.sqrt(1 - n * n) - 1);\n  return 0.5 * (Math.sqrt(1 - (n -= 2) * n) + 1);\n};\n\nexports.inBack = function(n){\n  var s = 1.70158;\n  return n * n * (( s + 1 ) * n - s);\n};\n\nexports.outBack = function(n){\n  var s = 1.70158;\n  return --n * n * ((s + 1) * n + s) + 1;\n};\n\nexports.inOutBack = function(n){\n  var s = 1.70158 * 1.525;\n  if ( ( n *= 2 ) < 1 ) return 0.5 * ( n * n * ( ( s + 1 ) * n - s ) );\n  return 0.5 * ( ( n -= 2 ) * n * ( ( s + 1 ) * n + s ) + 2 );\n};\n\nexports.inBounce = function(n){\n  return 1 - exports.outBounce(1 - n);\n};\n\nexports.outBounce = function(n){\n  if ( n < ( 1 / 2.75 ) ) {\n    return 7.5625 * n * n;\n  } else if ( n < ( 2 / 2.75 ) ) {\n    return 7.5625 * ( n -= ( 1.5 / 2.75 ) ) * n + 0.75;\n  } else if ( n < ( 2.5 / 2.75 ) ) {\n    return 7.5625 * ( n -= ( 2.25 / 2.75 ) ) * n + 0.9375;\n  } else {\n    return 7.5625 * ( n -= ( 2.625 / 2.75 ) ) * n + 0.984375;\n  }\n};\n\nexports.inOutBounce = function(n){\n  if (n < .5) return exports.inBounce(n * 2) * .5;\n  return exports.outBounce(n * 2 - 1) * .5 + .5;\n};\n\n// aliases\n\nexports['in-quad'] = exports.inQuad;\nexports['out-quad'] = exports.outQuad;\nexports['in-out-quad'] = exports.inOutQuad;\nexports['in-cube'] = exports.inCube;\nexports['out-cube'] = exports.outCube;\nexports['in-out-cube'] = exports.inOutCube;\nexports['in-quart'] = exports.inQuart;\nexports['out-quart'] = exports.outQuart;\nexports['in-out-quart'] = exports.inOutQuart;\nexports['in-quint'] = exports.inQuint;\nexports['out-quint'] = exports.outQuint;\nexports['in-out-quint'] = exports.inOutQuint;\nexports['in-sine'] = exports.inSine;\nexports['out-sine'] = exports.outSine;\nexports['in-out-sine'] = exports.inOutSine;\nexports['in-expo'] = exports.inExpo;\nexports['out-expo'] = exports.outExpo;\nexports['in-out-expo'] = exports.inOutExpo;\nexports['in-circ'] = exports.inCirc;\nexports['out-circ'] = exports.outCirc;\nexports['in-out-circ'] = exports.inOutCirc;\nexports['in-back'] = exports.inBack;\nexports['out-back'] = exports.outBack;\nexports['in-out-back'] = exports.inOutBack;\nexports['in-bounce'] = exports.inBounce;\nexports['out-bounce'] = exports.outBounce;\nexports['in-out-bounce'] = exports.inOutBounce;\n","/*!\n * headroom.js v0.9.4 - Give your page some headroom. Hide your header until you need it\n * Copyright (c) 2017 Nick Williams - http://wicky.nillia.ms/headroom.js\n * License: MIT\n */\n\n(function(root, factory) {\n  'use strict';\n\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  }\n  else if (typeof exports === 'object') {\n    // COMMONJS\n    module.exports = factory();\n  }\n  else {\n    // BROWSER\n    root.Headroom = factory();\n  }\n}(this, function() {\n  'use strict';\n\n  /* exported features */\n  \n  var features = {\n    bind : !!(function(){}.bind),\n    classList : 'classList' in document.documentElement,\n    rAF : !!(window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame)\n  };\n  window.requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame;\n  \n  /**\n   * Handles debouncing of events via requestAnimationFrame\n   * @see http://www.html5rocks.com/en/tutorials/speed/animations/\n   * @param {Function} callback The callback to handle whichever event\n   */\n  function Debouncer (callback) {\n    this.callback = callback;\n    this.ticking = false;\n  }\n  Debouncer.prototype = {\n    constructor : Debouncer,\n  \n    /**\n     * dispatches the event to the supplied callback\n     * @private\n     */\n    update : function() {\n      this.callback && this.callback();\n      this.ticking = false;\n    },\n  \n    /**\n     * ensures events don't get stacked\n     * @private\n     */\n    requestTick : function() {\n      if(!this.ticking) {\n        requestAnimationFrame(this.rafCallback || (this.rafCallback = this.update.bind(this)));\n        this.ticking = true;\n      }\n    },\n  \n    /**\n     * Attach this as the event listeners\n     */\n    handleEvent : function() {\n      this.requestTick();\n    }\n  };\n  /**\n   * Check if object is part of the DOM\n   * @constructor\n   * @param {Object} obj element to check\n   */\n  function isDOMElement(obj) {\n    return obj && typeof window !== 'undefined' && (obj === window || obj.nodeType);\n  }\n  \n  /**\n   * Helper function for extending objects\n   */\n  function extend (object /*, objectN ... */) {\n    if(arguments.length <= 0) {\n      throw new Error('Missing arguments in extend function');\n    }\n  \n    var result = object || {},\n        key,\n        i;\n  \n    for (i = 1; i < arguments.length; i++) {\n      var replacement = arguments[i] || {};\n  \n      for (key in replacement) {\n        // Recurse into object except if the object is a DOM element\n        if(typeof result[key] === 'object' && ! isDOMElement(result[key])) {\n          result[key] = extend(result[key], replacement[key]);\n        }\n        else {\n          result[key] = result[key] || replacement[key];\n        }\n      }\n    }\n  \n    return result;\n  }\n  \n  /**\n   * Helper function for normalizing tolerance option to object format\n   */\n  function normalizeTolerance (t) {\n    return t === Object(t) ? t : { down : t, up : t };\n  }\n  \n  /**\n   * UI enhancement for fixed headers.\n   * Hides header when scrolling down\n   * Shows header when scrolling up\n   * @constructor\n   * @param {DOMElement} elem the header element\n   * @param {Object} options options for the widget\n   */\n  function Headroom (elem, options) {\n    options = extend(options, Headroom.options);\n  \n    this.lastKnownScrollY = 0;\n    this.elem             = elem;\n    this.tolerance        = normalizeTolerance(options.tolerance);\n    this.classes          = options.classes;\n    this.offset           = options.offset;\n    this.scroller         = options.scroller;\n    this.initialised      = false;\n    this.onPin            = options.onPin;\n    this.onUnpin          = options.onUnpin;\n    this.onTop            = options.onTop;\n    this.onNotTop         = options.onNotTop;\n    this.onBottom         = options.onBottom;\n    this.onNotBottom      = options.onNotBottom;\n  }\n  Headroom.prototype = {\n    constructor : Headroom,\n  \n    /**\n     * Initialises the widget\n     */\n    init : function() {\n      if(!Headroom.cutsTheMustard) {\n        return;\n      }\n  \n      this.debouncer = new Debouncer(this.update.bind(this));\n      this.elem.classList.add(this.classes.initial);\n  \n      // defer event registration to handle browser\n      // potentially restoring previous scroll position\n      setTimeout(this.attachEvent.bind(this), 100);\n  \n      return this;\n    },\n  \n    /**\n     * Unattaches events and removes any classes that were added\n     */\n    destroy : function() {\n      var classes = this.classes;\n  \n      this.initialised = false;\n  \n      for (var key in classes) {\n        if(classes.hasOwnProperty(key)) {\n          this.elem.classList.remove(classes[key]);\n        }\n      }\n  \n      this.scroller.removeEventListener('scroll', this.debouncer, false);\n    },\n  \n    /**\n     * Attaches the scroll event\n     * @private\n     */\n    attachEvent : function() {\n      if(!this.initialised){\n        this.lastKnownScrollY = this.getScrollY();\n        this.initialised = true;\n        this.scroller.addEventListener('scroll', this.debouncer, false);\n  \n        this.debouncer.handleEvent();\n      }\n    },\n  \n    /**\n     * Unpins the header if it's currently pinned\n     */\n    unpin : function() {\n      var classList = this.elem.classList,\n        classes = this.classes;\n  \n      if(classList.contains(classes.pinned) || !classList.contains(classes.unpinned)) {\n        classList.add(classes.unpinned);\n        classList.remove(classes.pinned);\n        this.onUnpin && this.onUnpin.call(this);\n      }\n    },\n  \n    /**\n     * Pins the header if it's currently unpinned\n     */\n    pin : function() {\n      var classList = this.elem.classList,\n        classes = this.classes;\n  \n      if(classList.contains(classes.unpinned)) {\n        classList.remove(classes.unpinned);\n        classList.add(classes.pinned);\n        this.onPin && this.onPin.call(this);\n      }\n    },\n  \n    /**\n     * Handles the top states\n     */\n    top : function() {\n      var classList = this.elem.classList,\n        classes = this.classes;\n  \n      if(!classList.contains(classes.top)) {\n        classList.add(classes.top);\n        classList.remove(classes.notTop);\n        this.onTop && this.onTop.call(this);\n      }\n    },\n  \n    /**\n     * Handles the not top state\n     */\n    notTop : function() {\n      var classList = this.elem.classList,\n        classes = this.classes;\n  \n      if(!classList.contains(classes.notTop)) {\n        classList.add(classes.notTop);\n        classList.remove(classes.top);\n        this.onNotTop && this.onNotTop.call(this);\n      }\n    },\n  \n    bottom : function() {\n      var classList = this.elem.classList,\n        classes = this.classes;\n  \n      if(!classList.contains(classes.bottom)) {\n        classList.add(classes.bottom);\n        classList.remove(classes.notBottom);\n        this.onBottom && this.onBottom.call(this);\n      }\n    },\n  \n    /**\n     * Handles the not top state\n     */\n    notBottom : function() {\n      var classList = this.elem.classList,\n        classes = this.classes;\n  \n      if(!classList.contains(classes.notBottom)) {\n        classList.add(classes.notBottom);\n        classList.remove(classes.bottom);\n        this.onNotBottom && this.onNotBottom.call(this);\n      }\n    },\n  \n    /**\n     * Gets the Y scroll position\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window.scrollY\n     * @return {Number} pixels the page has scrolled along the Y-axis\n     */\n    getScrollY : function() {\n      return (this.scroller.pageYOffset !== undefined)\n        ? this.scroller.pageYOffset\n        : (this.scroller.scrollTop !== undefined)\n          ? this.scroller.scrollTop\n          : (document.documentElement || document.body.parentNode || document.body).scrollTop;\n    },\n  \n    /**\n     * Gets the height of the viewport\n     * @see http://andylangton.co.uk/blog/development/get-viewport-size-width-and-height-javascript\n     * @return {int} the height of the viewport in pixels\n     */\n    getViewportHeight : function () {\n      return window.innerHeight\n        || document.documentElement.clientHeight\n        || document.body.clientHeight;\n    },\n  \n    /**\n     * Gets the physical height of the DOM element\n     * @param  {Object}  elm the element to calculate the physical height of which\n     * @return {int}     the physical height of the element in pixels\n     */\n    getElementPhysicalHeight : function (elm) {\n      return Math.max(\n        elm.offsetHeight,\n        elm.clientHeight\n      );\n    },\n  \n    /**\n     * Gets the physical height of the scroller element\n     * @return {int} the physical height of the scroller element in pixels\n     */\n    getScrollerPhysicalHeight : function () {\n      return (this.scroller === window || this.scroller === document.body)\n        ? this.getViewportHeight()\n        : this.getElementPhysicalHeight(this.scroller);\n    },\n  \n    /**\n     * Gets the height of the document\n     * @see http://james.padolsey.com/javascript/get-document-height-cross-browser/\n     * @return {int} the height of the document in pixels\n     */\n    getDocumentHeight : function () {\n      var body = document.body,\n        documentElement = document.documentElement;\n  \n      return Math.max(\n        body.scrollHeight, documentElement.scrollHeight,\n        body.offsetHeight, documentElement.offsetHeight,\n        body.clientHeight, documentElement.clientHeight\n      );\n    },\n  \n    /**\n     * Gets the height of the DOM element\n     * @param  {Object}  elm the element to calculate the height of which\n     * @return {int}     the height of the element in pixels\n     */\n    getElementHeight : function (elm) {\n      return Math.max(\n        elm.scrollHeight,\n        elm.offsetHeight,\n        elm.clientHeight\n      );\n    },\n  \n    /**\n     * Gets the height of the scroller element\n     * @return {int} the height of the scroller element in pixels\n     */\n    getScrollerHeight : function () {\n      return (this.scroller === window || this.scroller === document.body)\n        ? this.getDocumentHeight()\n        : this.getElementHeight(this.scroller);\n    },\n  \n    /**\n     * determines if the scroll position is outside of document boundaries\n     * @param  {int}  currentScrollY the current y scroll position\n     * @return {bool} true if out of bounds, false otherwise\n     */\n    isOutOfBounds : function (currentScrollY) {\n      var pastTop  = currentScrollY < 0,\n        pastBottom = currentScrollY + this.getScrollerPhysicalHeight() > this.getScrollerHeight();\n  \n      return pastTop || pastBottom;\n    },\n  \n    /**\n     * determines if the tolerance has been exceeded\n     * @param  {int} currentScrollY the current scroll y position\n     * @return {bool} true if tolerance exceeded, false otherwise\n     */\n    toleranceExceeded : function (currentScrollY, direction) {\n      return Math.abs(currentScrollY-this.lastKnownScrollY) >= this.tolerance[direction];\n    },\n  \n    /**\n     * determine if it is appropriate to unpin\n     * @param  {int} currentScrollY the current y scroll position\n     * @param  {bool} toleranceExceeded has the tolerance been exceeded?\n     * @return {bool} true if should unpin, false otherwise\n     */\n    shouldUnpin : function (currentScrollY, toleranceExceeded) {\n      var scrollingDown = currentScrollY > this.lastKnownScrollY,\n        pastOffset = currentScrollY >= this.offset;\n  \n      return scrollingDown && pastOffset && toleranceExceeded;\n    },\n  \n    /**\n     * determine if it is appropriate to pin\n     * @param  {int} currentScrollY the current y scroll position\n     * @param  {bool} toleranceExceeded has the tolerance been exceeded?\n     * @return {bool} true if should pin, false otherwise\n     */\n    shouldPin : function (currentScrollY, toleranceExceeded) {\n      var scrollingUp  = currentScrollY < this.lastKnownScrollY,\n        pastOffset = currentScrollY <= this.offset;\n  \n      return (scrollingUp && toleranceExceeded) || pastOffset;\n    },\n  \n    /**\n     * Handles updating the state of the widget\n     */\n    update : function() {\n      var currentScrollY  = this.getScrollY(),\n        scrollDirection = currentScrollY > this.lastKnownScrollY ? 'down' : 'up',\n        toleranceExceeded = this.toleranceExceeded(currentScrollY, scrollDirection);\n  \n      if(this.isOutOfBounds(currentScrollY)) { // Ignore bouncy scrolling in OSX\n        return;\n      }\n  \n      if (currentScrollY <= this.offset ) {\n        this.top();\n      } else {\n        this.notTop();\n      }\n  \n      if(currentScrollY + this.getViewportHeight() >= this.getScrollerHeight()) {\n        this.bottom();\n      }\n      else {\n        this.notBottom();\n      }\n  \n      if(this.shouldUnpin(currentScrollY, toleranceExceeded)) {\n        this.unpin();\n      }\n      else if(this.shouldPin(currentScrollY, toleranceExceeded)) {\n        this.pin();\n      }\n  \n      this.lastKnownScrollY = currentScrollY;\n    }\n  };\n  /**\n   * Default options\n   * @type {Object}\n   */\n  Headroom.options = {\n    tolerance : {\n      up : 0,\n      down : 0\n    },\n    offset : 0,\n    scroller: window,\n    classes : {\n      pinned : 'headroom--pinned',\n      unpinned : 'headroom--unpinned',\n      top : 'headroom--top',\n      notTop : 'headroom--not-top',\n      bottom : 'headroom--bottom',\n      notBottom : 'headroom--not-bottom',\n      initial : 'headroom'\n    }\n  };\n  Headroom.cutsTheMustard = typeof features !== 'undefined' && features.rAF && features.bind && features.classList;\n\n  return Headroom;\n}));","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.onscrolling = factory()\n}(this, function () { 'use strict';\n\n    'use strict';\n\n    // Figure out proper requestAnimationFrame\n    var requestFrame = window.requestAnimationFrame,\n        cancelFrame  = window.cancelAnimationFrame,\n        vendors      = ['ms', 'moz', 'webkit', 'o'];\n\n    for (var i = 0; i < vendors.length && !requestFrame; i++) {\n        requestFrame = window[vendors[i] + 'RequestAnimationFrame'];\n        cancelFrame  = window[vendors[i] + 'CancelAnimationFrame'] ||\n                       window[vendors[i] + 'CancelRequestAnimationFrame'];\n    }\n\n    // Module state\n    var isSupported    = requestFrame !== undefined,\n        isListening    = false,\n        isQueued       = false,\n        isIdle         = true,\n        scrollY        = window.pageYOffset,\n        scrollX        = window.pageXOffset,\n        scrollYCached  = scrollY,\n        scrollXCached  = scrollX,\n        directionX     = ['x', 'horizontal'],\n        directionAll   = ['any'],\n        callbackQueue  = {\n            x   : [],\n            y   : [],\n            any : []\n        },\n        detectIdleTimeout,\n        tickId;\n\n    // Main scroll handler\n    // -------------------\n    function handleScroll() {\n        var isScrollChanged = false;\n        if (callbackQueue.x.length || callbackQueue.any.length) {\n            scrollX = window.pageXOffset;\n        }\n        if (callbackQueue.y.length || callbackQueue.any.length) {\n            scrollY = window.pageYOffset;\n        }\n\n    \tif (scrollY !== scrollYCached) {\n            callbackQueue.y.forEach(triggerCallback.y);\n            scrollYCached = scrollY;\n            isScrollChanged = true;\n        }\n    \tif (scrollX !== scrollXCached) {\n            callbackQueue.x.forEach(triggerCallback.x);\n            scrollXCached = scrollX;\n            isScrollChanged = true;\n        }\n        if (isScrollChanged) {\n            callbackQueue.any.forEach(triggerCallback.any);\n            window.clearTimeout(detectIdleTimeout);\n            detectIdleTimeout = null;\n        }\n\n        isQueued = false;\n        requestTick();\n    }\n\n    // Utilities\n    // ---------\n    function triggerCallback(callback, scroll) {\n        callback(scroll);\n    }\n    triggerCallback.y = function(callback) {\n        triggerCallback(callback, scrollY);\n    };\n    triggerCallback.x = function(callback) {\n        triggerCallback(callback, scrollX);\n    };\n    triggerCallback.any = function(callback) {\n        triggerCallback(callback, [scrollX, scrollY]);\n    };\n\n    function enableScrollListener() {\n        if (isListening || isQueued) {\n            return;\n        }\n        if (isIdle) {\n            window.addEventListener('scroll', onScrollDebouncer);\n            document.body.addEventListener('touchmove', onScrollDebouncer);\n            isListening = true;\n            return;\n        }\n        requestTick();\n    }\n\n    function disableScrollListener() {\n        if (!isListening) {\n            return;\n        }\n        window.removeEventListener('scroll', onScrollDebouncer);\n        document.body.removeEventListener('touchmove', onScrollDebouncer);\n        isListening = false;\n    }\n\n    function onScrollDebouncer() {\n        isIdle = false;\n    \trequestTick();\n        disableScrollListener();\n    }\n\n    function requestTick() {\n    \tif (isQueued) {\n            return;\n    \t}\n        if (!detectIdleTimeout) {\n            // Idle is defined as 1.5 seconds without scroll change\n            detectIdleTimeout = window.setTimeout(detectIdle, 1500);\n        }\n    \ttickId = requestFrame(handleScroll);\n    \tisQueued = true;\n    }\n\n    function cancelTick() {\n    \tif (!isQueued) {\n            return;\n    \t}\n    \tcancelFrame(tickId);\n    \tisQueued = false;\n    }\n\n    function detectIdle() {\n        isIdle = true;\n        enableScrollListener();\n    }\n\n    /**\n     * Attach callback to debounced scroll event\n     *\n     * Takes two forms:\n     * @param function callback  Function to attach to a vertical scroll event\n     * Or:\n     * @param string   direction Direction of scroll to attach to:\n     *                 'horizontal'/'x', 'vertical'/'y' (the default),\n     *                 or 'any' (listens to both)\n     * @param function callback  Function to attach to a scroll event in specified direction\n     */\n    function onscrolling(direction, callback) {\n    \tif (!isSupported) {\n    \t\treturn;\n    \t}\n    \tenableScrollListener();\n        // Verify parameters\n        if (typeof direction === 'function') {\n            callback = direction;\n            callbackQueue.y.push(callback);\n            return;\n        }\n        if (typeof callback === 'function') {\n            if (~directionX.indexOf(direction)) {\n                callbackQueue.x.push(callback);\n            } else if (~directionAll.indexOf(direction)) {\n                callbackQueue.any.push(callback);\n            } else {\n                callbackQueue.y.push(callback);\n            }\n        }\n    }\n\n    onscrolling.remove = function(direction, fn) {\n        var queueKey = 'y',\n            queue,\n            fnIdx;\n\n        if (typeof direction === 'string') {\n            // If second parameter is not a function, return\n            if (typeof fn !== 'function') {\n                return;\n            }\n            if (~directionX.indexOf(direction)) {\n                queueKey = directionX[0];\n            } else if (~directionAll.indexOf(direction)) {\n                queueKey = directionAll[0];\n            }\n        } else {\n            fn = direction;\n        }\n        queue = callbackQueue[queueKey];\n        fnIdx = queue.indexOf(fn);\n        if (fnIdx > -1) {\n            queue.splice(fnIdx, 1);\n        }\n        // If there's no listeners left, disable listening\n        if (!callbackQueue.x.length && !callbackQueue.y.length && !callbackQueue.any.length) {\n            cancelTick();\n            disableScrollListener();\n        }\n    };\n    onscrolling.off = onscrolling.remove;\n\n\n    return onscrolling;\n\n}));","/**\n * Module dependencies.\n */\n\nvar Tween = require('tween');\nvar raf = require('raf');\n\n/**\n * Expose `scrollTo`.\n */\n\nmodule.exports = scrollTo;\n\n/**\n * Scroll to `(x, y)`.\n *\n * @param {Number} x\n * @param {Number} y\n * @api public\n */\n\nfunction scrollTo(x, y, options) {\n  options = options || {};\n\n  // start position\n  var start = scroll();\n\n  // setup tween\n  var tween = Tween(start)\n    .ease(options.ease || 'out-circ')\n    .to({ top: y, left: x })\n    .duration(options.duration || 1000);\n\n  // scroll\n  tween.update(function(o){\n    window.scrollTo(o.left | 0, o.top | 0);\n  });\n\n  // handle end\n  tween.on('end', function(){\n    animate = function(){};\n  });\n\n  // animate\n  function animate() {\n    raf(animate);\n    tween.update();\n  }\n\n  animate();\n  \n  return tween;\n}\n\n/**\n * Return scroll position.\n *\n * @return {Object}\n * @api private\n */\n\nfunction scroll() {\n  var y = window.pageYOffset || document.documentElement.scrollTop;\n  var x = window.pageXOffset || document.documentElement.scrollLeft;\n  return { top: y, left: x };\n}\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}